# -*- coding: utf-8 -*-
"""YOLOv3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sEq5YiwgYsrz1BTaFV6v8kO7LOqHqxtc
"""

# Commented out IPython magic to ensure Python compatibility.
# %config IPCompleter.use_jedi = False
# %config Completer.evaluation = 'limited'

import os
import numpy as np
import cv2

net = cv2.dnn.readNet("yolov3.weights","yolov3.cfg")

classees = []

with open("coco.names", "r") as f:
    classes = [line.strip() for line in f.readlines()]
    print("classes names are: ", classes)
    print("len of classes is: ", len(classes))

layer_names = net.getLayerNames()

print(net.getUnconnectedOutLayers())

for i in net.getUnconnectedOutLayers():
    print(layer_names[i-1])

output_layers = [layer_names[i-1] for i in net.getUnconnectedOutLayers()]

output_layers

colors = np.random.uniform(0, 255, size= (len(classes), 3))

"""*Loading Images*"""

img = cv2.imread("image2.jpg")

height, width, channel = img.shape

blob = cv2.dnn.blobFromImage(img, 0.00392, (416, 416), (0, 0, 0), True, crop= False )

net.setInput(blob)

outs = net.forward(output_layers)

len(outs)

confidences = []
boxes = []
class_ids = []

for out in outs:
    for detection in out:
        scores = detection[5:]
        class_id = np.argmax(scores)
        confidence = scores[class_id]
        if confidence > 0.5:
            center_x =  int(detection[0]*width)
            center_y = int(detection[1]*height)
            w = int(detection[2]*width)
            h = int(detection[3]*height)

            #Rectangle Coordinates
            x = int(center_x - w/2)
            y= int(center_y- h/2)

            boxes.append([x, y, w, h])
            class_ids.append(class_id)
            confidences.append(float(confidence))

len(boxes)

indexes =  cv2.dnn.NMSBoxes(boxes, confidences, 0.5, 0.4)

len(indexes)

font = cv2.FONT_HERSHEY_SIMPLEX
for i in range(len(boxes)):
    for i in indexes:
        x, y, w, h = boxes[i]
        label = str(classes[class_ids[i]])
        color = colors[class_ids[i]]
        cv2.rectangle(img, (x, y), (x+w, y+h), color, 2)
        cv2.putText(img, label, (x, y-5), font, 1, color, 2)

cv2.imwrite("result.jpg", img)
cv2.imshow("Detect", img)
cv2.waitKey(0)
cv2.destroyAllWindows()

